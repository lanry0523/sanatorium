<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yun.sanatorium.dao.AttachmentMapper">

    <resultMap id="BaseResultMap" type="com.yun.sanatorium.model.entity.Attachment">
        <id column="id" jdbcType="VARCHAR" property="id"/>
        <result column="relation_id" jdbcType="VARCHAR" property="relationId"/>
        <result column="url" jdbcType="VARCHAR" property="url"/>
        <result column="type" jdbcType="INTEGER" property="type"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="create_time" jdbcType="VARCHAR" property="createTime"/>
        <result column="update_time" jdbcType="VARCHAR" property="updateTime"/>
    </resultMap>

    <sql id="table_name">
        attachment
    </sql>

    <sql id="columns">
        id,
        relation_id,
        url,
        type,
        name,
        create_time,
        update_time
    </sql>

    <!--批量保存数据 -->
    <insert id="batchSaveAttachmentList" parameterType="java.util.List" useGeneratedKeys="false">
        insert into attachment
        (
        id,
        relation_id,
        url,
        type,
        name,
        stage_type,
        create_time,
        update_time
        )
        values
        <foreach collection="list" item="item" index="index" separator=",">
            (
            #{item.id},
            #{item.relationId},
            #{item.url},
            #{item.type},
            #{item.name},
            #{item.createTime},
            #{item.updateTime}
            )
        </foreach>
    </insert>

    <!-- 根据关联id编辑数据 -->
    <delete id="deleteByRelationId" parameterType="java.lang.String">
        delete from
        <include refid="table_name"/>
        where relation_id = #{relationId}
    </delete>

    <!-- 根据关联id和类型查询数据根据关联id和类型查询数据 -->
    <select id="selectByRelationIdAndType" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="columns"/>
        from
        <include refid="table_name"/>
        where relation_id = #{relationId}
        and type = #{type}
    </select>

</mapper>